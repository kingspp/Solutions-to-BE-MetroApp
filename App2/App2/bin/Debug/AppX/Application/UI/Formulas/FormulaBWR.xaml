<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="App2.FormulaBWR"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:App2"
    xmlns:common="using:App2.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">My Application</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:ConnectionId='1' x:Name="backButton"                IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="Bridge rectifier" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
        <TextBlock HorizontalAlignment="Left" Margin="76,20,0,0" Grid.Row="1" TextWrapping="Wrap" Text="V2(Mean Voltage) = (n2/n1)*V1" VerticalAlignment="Top" FontSize="25"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,72,0,0" Grid.Row="1" TextWrapping="Wrap" Text="F(Frequency) = W/(2*PI)" VerticalAlignment="Top" FontSize="25"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,118,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Im(Mean Current) = Vm/(2Rf+Rl)" VerticalAlignment="Top" FontSize="25" Width="405"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,170,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Irms(Root mean square value) = Im/root2" VerticalAlignment="Top" FontSize="25" Width="490"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,214,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Idc(DC load current) = Im/PI" VerticalAlignment="Top" FontSize="25"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,266,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Vdc(DC load voltage) = (Vm/PI)/(1+(Rf/Rl)" VerticalAlignment="Top" FontSize="25" Width="510"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,312,0,0" Grid.Row="1" TextWrapping="Wrap" Text="PIV(Peak inverse voltage) = Vm" VerticalAlignment="Top" FontSize="25"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,364,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Pac(AC power) = (Irms*Irms)*(Rf+Rl)" VerticalAlignment="Top" FontSize="25" Width="442"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,410,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Pdc(DC power) = (Idc*Idc)*Rl" VerticalAlignment="Top" FontSize="25"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,462,0,0" Grid.Row="1" TextWrapping="Wrap" Text="N(Effeciency) = (Pdc/Pac)*100" VerticalAlignment="Top" FontSize="25" Width="442"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,516,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Ripple Factor = sqrt(((Irms/Idc)square)-1" VerticalAlignment="Top" FontSize="25" Width="476"/>
        <TextBlock HorizontalAlignment="Left" Margin="76,568,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Ripple Factor = 1/4root(3)*F*C*Rl" VerticalAlignment="Top" FontSize="25" Width="476"/>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>

